# Makefile.in generated by automake 1.7.3 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#########################################################
# starspan Makefile.am 
# $Id$
#########################################################

srcdir = .
top_srcdir = .

pkgdatadir = $(datadir)/starspan
pkglibdir = $(libdir)/starspan
pkgincludedir = $(includedir)/starspan
top_builddir = .

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
ACLOCAL = ${SHELL} /home/carueda/cstars/prj/starspan/missing --run aclocal-1.7
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/carueda/cstars/prj/starspan/missing --run tar
AUTOCONF = ${SHELL} /home/carueda/cstars/prj/starspan/missing --run autoconf
AUTOHEADER = ${SHELL} /home/carueda/cstars/prj/starspan/missing --run autoheader
AUTOMAKE = ${SHELL} /home/carueda/cstars/prj/starspan/missing --run automake-1.7
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"starspan\" -DVERSION=\"0.97beta\" 
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
GDAL_CONFIG = /usr/local/bin/gdal-config
GEOS_CONFIG = /usr/local/bin/geos-config
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -L/usr/local/lib -lgdal -L/usr/local/lib -lgeos 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/carueda/cstars/prj/starspan/missing --run makeinfo
OBJEXT = o
PACKAGE = starspan
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
SET_MAKE = 
SH = /bin/sh
SHELL = /bin/sh
STRIP = 
VERSION = 1.2.6
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_STRIP = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build_alias = 
datadir = ${prefix}/share
exec_prefix = ${prefix}
host_alias = 
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/carueda/cstars/prj/starspan/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 

bin_PROGRAMS = starspan2
bin_SCRIPTS = starspan
CLEANFILES = $(bin_SCRIPTS)
EXTRA_DIST = starspan

starspan2_SOURCES = \
	src/starspan2.cc \
	src/starspan_stats.cc \
	src/starspan_countbyclass.cc \
	src/starspan_update_csv.cc \
	src/starspan_csv.cc \
	src/starspan_csv_raster_field.cc \
	src/starspan_gen_envisl.cc \
	src/starspan_minirasters.cc \
	src/starspan_jtstest.cc \
	src/starspan_util.cc \
	src/starspan_dump.cc \
	src/starspan_tuct2.cc \
	src/csv/Csv.cc \
	src/jts/jts.cc \
	src/raster/Raster_gdal.cc \
	src/rasterizers/LineRasterizer.cc \
	src/stats/Stats.cc \
	src/traverser/traverser.cc \
	src/util/Progress.cc \
	src/vector/Vector_ogr.cc


AM_CPPFLAGS = -I/usr/local/include  -I/usr/local/include

INCLUDES = \
	-I$(srcdir)/src \
	-I$(srcdir)/src/csv \
	-I$(srcdir)/src/jts \
	-I$(srcdir)/src/raster \
	-I$(srcdir)/src/rasterizers \
	-I$(srcdir)/src/stats \
	-I$(srcdir)/src/traverser \
	-I$(srcdir)/src/util \
	-I$(srcdir)/src/vector

subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES = starspan
bin_PROGRAMS = starspan2$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_starspan2_OBJECTS = starspan2.$(OBJEXT) starspan_stats.$(OBJEXT) \
	starspan_countbyclass.$(OBJEXT) starspan_update_csv.$(OBJEXT) \
	starspan_csv.$(OBJEXT) starspan_csv_raster_field.$(OBJEXT) \
	starspan_gen_envisl.$(OBJEXT) starspan_minirasters.$(OBJEXT) \
	starspan_jtstest.$(OBJEXT) starspan_util.$(OBJEXT) \
	starspan_dump.$(OBJEXT) starspan_tuct2.$(OBJEXT) Csv.$(OBJEXT) \
	jts.$(OBJEXT) Raster_gdal.$(OBJEXT) LineRasterizer.$(OBJEXT) \
	Stats.$(OBJEXT) traverser.$(OBJEXT) Progress.$(OBJEXT) \
	Vector_ogr.$(OBJEXT)
starspan2_OBJECTS = $(am_starspan2_OBJECTS)
starspan2_LDADD = $(LDADD)
starspan2_DEPENDENCIES =
starspan2_LDFLAGS =
SCRIPTS = $(bin_SCRIPTS)


DEFAULT_INCLUDES =  -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/Csv.Po ./$(DEPDIR)/LineRasterizer.Po \
	./$(DEPDIR)/Progress.Po ./$(DEPDIR)/Raster_gdal.Po \
	./$(DEPDIR)/Stats.Po ./$(DEPDIR)/Vector_ogr.Po \
	./$(DEPDIR)/jts.Po ./$(DEPDIR)/starspan2.Po \
	./$(DEPDIR)/starspan_countbyclass.Po \
	./$(DEPDIR)/starspan_csv.Po \
	./$(DEPDIR)/starspan_csv_raster_field.Po \
	./$(DEPDIR)/starspan_dump.Po \
	./$(DEPDIR)/starspan_gen_envisl.Po \
	./$(DEPDIR)/starspan_jtstest.Po \
	./$(DEPDIR)/starspan_minirasters.Po \
	./$(DEPDIR)/starspan_stats.Po \
	./$(DEPDIR)/starspan_tuct2.Po \
	./$(DEPDIR)/starspan_update_csv.Po \
	./$(DEPDIR)/starspan_util.Po \
	./$(DEPDIR)/traverser.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
DIST_SOURCES = $(starspan2_SOURCES)
DIST_COMMON = README AUTHORS COPYING ChangeLog INSTALL Makefile.am \
	Makefile.in NEWS THANKS aclocal.m4 configure configure.in \
	depcomp install-sh missing mkinstalldirs starspan.in
SOURCES = $(starspan2_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj

am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)

$(top_builddir)/config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck
$(srcdir)/configure:  $(srcdir)/configure.in $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
	cd $(srcdir) && $(AUTOCONF)

$(ACLOCAL_M4):  configure.in 
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
starspan: $(top_builddir)/config.status starspan.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
starspan2$(EXEEXT): $(starspan2_OBJECTS) $(starspan2_DEPENDENCIES) 
	@rm -f starspan2$(EXEEXT)
	$(CXXLINK) $(starspan2_LDFLAGS) $(starspan2_OBJECTS) $(starspan2_LDADD) $(LIBS)
binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f $$d$$p; then \
	    f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	    echo " $(binSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(bindir)/$$f"; \
	    $(binSCRIPT_INSTALL) $$d$$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's|^.*/||;$(transform)'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Csv.Po
include ./$(DEPDIR)/LineRasterizer.Po
include ./$(DEPDIR)/Progress.Po
include ./$(DEPDIR)/Raster_gdal.Po
include ./$(DEPDIR)/Stats.Po
include ./$(DEPDIR)/Vector_ogr.Po
include ./$(DEPDIR)/jts.Po
include ./$(DEPDIR)/starspan2.Po
include ./$(DEPDIR)/starspan_countbyclass.Po
include ./$(DEPDIR)/starspan_csv.Po
include ./$(DEPDIR)/starspan_csv_raster_field.Po
include ./$(DEPDIR)/starspan_dump.Po
include ./$(DEPDIR)/starspan_gen_envisl.Po
include ./$(DEPDIR)/starspan_jtstest.Po
include ./$(DEPDIR)/starspan_minirasters.Po
include ./$(DEPDIR)/starspan_stats.Po
include ./$(DEPDIR)/starspan_tuct2.Po
include ./$(DEPDIR)/starspan_update_csv.Po
include ./$(DEPDIR)/starspan_util.Po
include ./$(DEPDIR)/traverser.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cc.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cc.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
	fi
#	source='$<' object='$@' libtool=no \
#	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

starspan2.o: src/starspan2.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan2.o -MD -MP -MF "$(DEPDIR)/starspan2.Tpo" \
	  -c -o starspan2.o `test -f 'src/starspan2.cc' || echo '$(srcdir)/'`src/starspan2.cc; \
	then mv "$(DEPDIR)/starspan2.Tpo" "$(DEPDIR)/starspan2.Po"; \
	else rm -f "$(DEPDIR)/starspan2.Tpo"; exit 1; \
	fi
#	source='src/starspan2.cc' object='starspan2.o' libtool=no \
#	depfile='$(DEPDIR)/starspan2.Po' tmpdepfile='$(DEPDIR)/starspan2.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan2.o `test -f 'src/starspan2.cc' || echo '$(srcdir)/'`src/starspan2.cc

starspan2.obj: src/starspan2.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan2.obj -MD -MP -MF "$(DEPDIR)/starspan2.Tpo" \
	  -c -o starspan2.obj `if test -f 'src/starspan2.cc'; then $(CYGPATH_W) 'src/starspan2.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan2.cc'; fi`; \
	then mv "$(DEPDIR)/starspan2.Tpo" "$(DEPDIR)/starspan2.Po"; \
	else rm -f "$(DEPDIR)/starspan2.Tpo"; exit 1; \
	fi
#	source='src/starspan2.cc' object='starspan2.obj' libtool=no \
#	depfile='$(DEPDIR)/starspan2.Po' tmpdepfile='$(DEPDIR)/starspan2.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan2.obj `if test -f 'src/starspan2.cc'; then $(CYGPATH_W) 'src/starspan2.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan2.cc'; fi`

starspan_stats.o: src/starspan_stats.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_stats.o -MD -MP -MF "$(DEPDIR)/starspan_stats.Tpo" \
	  -c -o starspan_stats.o `test -f 'src/starspan_stats.cc' || echo '$(srcdir)/'`src/starspan_stats.cc; \
	then mv "$(DEPDIR)/starspan_stats.Tpo" "$(DEPDIR)/starspan_stats.Po"; \
	else rm -f "$(DEPDIR)/starspan_stats.Tpo"; exit 1; \
	fi
#	source='src/starspan_stats.cc' object='starspan_stats.o' libtool=no \
#	depfile='$(DEPDIR)/starspan_stats.Po' tmpdepfile='$(DEPDIR)/starspan_stats.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_stats.o `test -f 'src/starspan_stats.cc' || echo '$(srcdir)/'`src/starspan_stats.cc

starspan_stats.obj: src/starspan_stats.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_stats.obj -MD -MP -MF "$(DEPDIR)/starspan_stats.Tpo" \
	  -c -o starspan_stats.obj `if test -f 'src/starspan_stats.cc'; then $(CYGPATH_W) 'src/starspan_stats.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_stats.cc'; fi`; \
	then mv "$(DEPDIR)/starspan_stats.Tpo" "$(DEPDIR)/starspan_stats.Po"; \
	else rm -f "$(DEPDIR)/starspan_stats.Tpo"; exit 1; \
	fi
#	source='src/starspan_stats.cc' object='starspan_stats.obj' libtool=no \
#	depfile='$(DEPDIR)/starspan_stats.Po' tmpdepfile='$(DEPDIR)/starspan_stats.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_stats.obj `if test -f 'src/starspan_stats.cc'; then $(CYGPATH_W) 'src/starspan_stats.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_stats.cc'; fi`

starspan_countbyclass.o: src/starspan_countbyclass.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_countbyclass.o -MD -MP -MF "$(DEPDIR)/starspan_countbyclass.Tpo" \
	  -c -o starspan_countbyclass.o `test -f 'src/starspan_countbyclass.cc' || echo '$(srcdir)/'`src/starspan_countbyclass.cc; \
	then mv "$(DEPDIR)/starspan_countbyclass.Tpo" "$(DEPDIR)/starspan_countbyclass.Po"; \
	else rm -f "$(DEPDIR)/starspan_countbyclass.Tpo"; exit 1; \
	fi
#	source='src/starspan_countbyclass.cc' object='starspan_countbyclass.o' libtool=no \
#	depfile='$(DEPDIR)/starspan_countbyclass.Po' tmpdepfile='$(DEPDIR)/starspan_countbyclass.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_countbyclass.o `test -f 'src/starspan_countbyclass.cc' || echo '$(srcdir)/'`src/starspan_countbyclass.cc

starspan_countbyclass.obj: src/starspan_countbyclass.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_countbyclass.obj -MD -MP -MF "$(DEPDIR)/starspan_countbyclass.Tpo" \
	  -c -o starspan_countbyclass.obj `if test -f 'src/starspan_countbyclass.cc'; then $(CYGPATH_W) 'src/starspan_countbyclass.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_countbyclass.cc'; fi`; \
	then mv "$(DEPDIR)/starspan_countbyclass.Tpo" "$(DEPDIR)/starspan_countbyclass.Po"; \
	else rm -f "$(DEPDIR)/starspan_countbyclass.Tpo"; exit 1; \
	fi
#	source='src/starspan_countbyclass.cc' object='starspan_countbyclass.obj' libtool=no \
#	depfile='$(DEPDIR)/starspan_countbyclass.Po' tmpdepfile='$(DEPDIR)/starspan_countbyclass.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_countbyclass.obj `if test -f 'src/starspan_countbyclass.cc'; then $(CYGPATH_W) 'src/starspan_countbyclass.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_countbyclass.cc'; fi`

starspan_update_csv.o: src/starspan_update_csv.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_update_csv.o -MD -MP -MF "$(DEPDIR)/starspan_update_csv.Tpo" \
	  -c -o starspan_update_csv.o `test -f 'src/starspan_update_csv.cc' || echo '$(srcdir)/'`src/starspan_update_csv.cc; \
	then mv "$(DEPDIR)/starspan_update_csv.Tpo" "$(DEPDIR)/starspan_update_csv.Po"; \
	else rm -f "$(DEPDIR)/starspan_update_csv.Tpo"; exit 1; \
	fi
#	source='src/starspan_update_csv.cc' object='starspan_update_csv.o' libtool=no \
#	depfile='$(DEPDIR)/starspan_update_csv.Po' tmpdepfile='$(DEPDIR)/starspan_update_csv.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_update_csv.o `test -f 'src/starspan_update_csv.cc' || echo '$(srcdir)/'`src/starspan_update_csv.cc

starspan_update_csv.obj: src/starspan_update_csv.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_update_csv.obj -MD -MP -MF "$(DEPDIR)/starspan_update_csv.Tpo" \
	  -c -o starspan_update_csv.obj `if test -f 'src/starspan_update_csv.cc'; then $(CYGPATH_W) 'src/starspan_update_csv.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_update_csv.cc'; fi`; \
	then mv "$(DEPDIR)/starspan_update_csv.Tpo" "$(DEPDIR)/starspan_update_csv.Po"; \
	else rm -f "$(DEPDIR)/starspan_update_csv.Tpo"; exit 1; \
	fi
#	source='src/starspan_update_csv.cc' object='starspan_update_csv.obj' libtool=no \
#	depfile='$(DEPDIR)/starspan_update_csv.Po' tmpdepfile='$(DEPDIR)/starspan_update_csv.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_update_csv.obj `if test -f 'src/starspan_update_csv.cc'; then $(CYGPATH_W) 'src/starspan_update_csv.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_update_csv.cc'; fi`

starspan_csv.o: src/starspan_csv.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_csv.o -MD -MP -MF "$(DEPDIR)/starspan_csv.Tpo" \
	  -c -o starspan_csv.o `test -f 'src/starspan_csv.cc' || echo '$(srcdir)/'`src/starspan_csv.cc; \
	then mv "$(DEPDIR)/starspan_csv.Tpo" "$(DEPDIR)/starspan_csv.Po"; \
	else rm -f "$(DEPDIR)/starspan_csv.Tpo"; exit 1; \
	fi
#	source='src/starspan_csv.cc' object='starspan_csv.o' libtool=no \
#	depfile='$(DEPDIR)/starspan_csv.Po' tmpdepfile='$(DEPDIR)/starspan_csv.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_csv.o `test -f 'src/starspan_csv.cc' || echo '$(srcdir)/'`src/starspan_csv.cc

starspan_csv.obj: src/starspan_csv.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_csv.obj -MD -MP -MF "$(DEPDIR)/starspan_csv.Tpo" \
	  -c -o starspan_csv.obj `if test -f 'src/starspan_csv.cc'; then $(CYGPATH_W) 'src/starspan_csv.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_csv.cc'; fi`; \
	then mv "$(DEPDIR)/starspan_csv.Tpo" "$(DEPDIR)/starspan_csv.Po"; \
	else rm -f "$(DEPDIR)/starspan_csv.Tpo"; exit 1; \
	fi
#	source='src/starspan_csv.cc' object='starspan_csv.obj' libtool=no \
#	depfile='$(DEPDIR)/starspan_csv.Po' tmpdepfile='$(DEPDIR)/starspan_csv.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_csv.obj `if test -f 'src/starspan_csv.cc'; then $(CYGPATH_W) 'src/starspan_csv.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_csv.cc'; fi`

starspan_csv_raster_field.o: src/starspan_csv_raster_field.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_csv_raster_field.o -MD -MP -MF "$(DEPDIR)/starspan_csv_raster_field.Tpo" \
	  -c -o starspan_csv_raster_field.o `test -f 'src/starspan_csv_raster_field.cc' || echo '$(srcdir)/'`src/starspan_csv_raster_field.cc; \
	then mv "$(DEPDIR)/starspan_csv_raster_field.Tpo" "$(DEPDIR)/starspan_csv_raster_field.Po"; \
	else rm -f "$(DEPDIR)/starspan_csv_raster_field.Tpo"; exit 1; \
	fi
#	source='src/starspan_csv_raster_field.cc' object='starspan_csv_raster_field.o' libtool=no \
#	depfile='$(DEPDIR)/starspan_csv_raster_field.Po' tmpdepfile='$(DEPDIR)/starspan_csv_raster_field.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_csv_raster_field.o `test -f 'src/starspan_csv_raster_field.cc' || echo '$(srcdir)/'`src/starspan_csv_raster_field.cc

starspan_csv_raster_field.obj: src/starspan_csv_raster_field.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_csv_raster_field.obj -MD -MP -MF "$(DEPDIR)/starspan_csv_raster_field.Tpo" \
	  -c -o starspan_csv_raster_field.obj `if test -f 'src/starspan_csv_raster_field.cc'; then $(CYGPATH_W) 'src/starspan_csv_raster_field.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_csv_raster_field.cc'; fi`; \
	then mv "$(DEPDIR)/starspan_csv_raster_field.Tpo" "$(DEPDIR)/starspan_csv_raster_field.Po"; \
	else rm -f "$(DEPDIR)/starspan_csv_raster_field.Tpo"; exit 1; \
	fi
#	source='src/starspan_csv_raster_field.cc' object='starspan_csv_raster_field.obj' libtool=no \
#	depfile='$(DEPDIR)/starspan_csv_raster_field.Po' tmpdepfile='$(DEPDIR)/starspan_csv_raster_field.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_csv_raster_field.obj `if test -f 'src/starspan_csv_raster_field.cc'; then $(CYGPATH_W) 'src/starspan_csv_raster_field.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_csv_raster_field.cc'; fi`

starspan_gen_envisl.o: src/starspan_gen_envisl.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_gen_envisl.o -MD -MP -MF "$(DEPDIR)/starspan_gen_envisl.Tpo" \
	  -c -o starspan_gen_envisl.o `test -f 'src/starspan_gen_envisl.cc' || echo '$(srcdir)/'`src/starspan_gen_envisl.cc; \
	then mv "$(DEPDIR)/starspan_gen_envisl.Tpo" "$(DEPDIR)/starspan_gen_envisl.Po"; \
	else rm -f "$(DEPDIR)/starspan_gen_envisl.Tpo"; exit 1; \
	fi
#	source='src/starspan_gen_envisl.cc' object='starspan_gen_envisl.o' libtool=no \
#	depfile='$(DEPDIR)/starspan_gen_envisl.Po' tmpdepfile='$(DEPDIR)/starspan_gen_envisl.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_gen_envisl.o `test -f 'src/starspan_gen_envisl.cc' || echo '$(srcdir)/'`src/starspan_gen_envisl.cc

starspan_gen_envisl.obj: src/starspan_gen_envisl.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_gen_envisl.obj -MD -MP -MF "$(DEPDIR)/starspan_gen_envisl.Tpo" \
	  -c -o starspan_gen_envisl.obj `if test -f 'src/starspan_gen_envisl.cc'; then $(CYGPATH_W) 'src/starspan_gen_envisl.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_gen_envisl.cc'; fi`; \
	then mv "$(DEPDIR)/starspan_gen_envisl.Tpo" "$(DEPDIR)/starspan_gen_envisl.Po"; \
	else rm -f "$(DEPDIR)/starspan_gen_envisl.Tpo"; exit 1; \
	fi
#	source='src/starspan_gen_envisl.cc' object='starspan_gen_envisl.obj' libtool=no \
#	depfile='$(DEPDIR)/starspan_gen_envisl.Po' tmpdepfile='$(DEPDIR)/starspan_gen_envisl.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_gen_envisl.obj `if test -f 'src/starspan_gen_envisl.cc'; then $(CYGPATH_W) 'src/starspan_gen_envisl.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_gen_envisl.cc'; fi`

starspan_minirasters.o: src/starspan_minirasters.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_minirasters.o -MD -MP -MF "$(DEPDIR)/starspan_minirasters.Tpo" \
	  -c -o starspan_minirasters.o `test -f 'src/starspan_minirasters.cc' || echo '$(srcdir)/'`src/starspan_minirasters.cc; \
	then mv "$(DEPDIR)/starspan_minirasters.Tpo" "$(DEPDIR)/starspan_minirasters.Po"; \
	else rm -f "$(DEPDIR)/starspan_minirasters.Tpo"; exit 1; \
	fi
#	source='src/starspan_minirasters.cc' object='starspan_minirasters.o' libtool=no \
#	depfile='$(DEPDIR)/starspan_minirasters.Po' tmpdepfile='$(DEPDIR)/starspan_minirasters.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_minirasters.o `test -f 'src/starspan_minirasters.cc' || echo '$(srcdir)/'`src/starspan_minirasters.cc

starspan_minirasters.obj: src/starspan_minirasters.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_minirasters.obj -MD -MP -MF "$(DEPDIR)/starspan_minirasters.Tpo" \
	  -c -o starspan_minirasters.obj `if test -f 'src/starspan_minirasters.cc'; then $(CYGPATH_W) 'src/starspan_minirasters.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_minirasters.cc'; fi`; \
	then mv "$(DEPDIR)/starspan_minirasters.Tpo" "$(DEPDIR)/starspan_minirasters.Po"; \
	else rm -f "$(DEPDIR)/starspan_minirasters.Tpo"; exit 1; \
	fi
#	source='src/starspan_minirasters.cc' object='starspan_minirasters.obj' libtool=no \
#	depfile='$(DEPDIR)/starspan_minirasters.Po' tmpdepfile='$(DEPDIR)/starspan_minirasters.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_minirasters.obj `if test -f 'src/starspan_minirasters.cc'; then $(CYGPATH_W) 'src/starspan_minirasters.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_minirasters.cc'; fi`

starspan_jtstest.o: src/starspan_jtstest.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_jtstest.o -MD -MP -MF "$(DEPDIR)/starspan_jtstest.Tpo" \
	  -c -o starspan_jtstest.o `test -f 'src/starspan_jtstest.cc' || echo '$(srcdir)/'`src/starspan_jtstest.cc; \
	then mv "$(DEPDIR)/starspan_jtstest.Tpo" "$(DEPDIR)/starspan_jtstest.Po"; \
	else rm -f "$(DEPDIR)/starspan_jtstest.Tpo"; exit 1; \
	fi
#	source='src/starspan_jtstest.cc' object='starspan_jtstest.o' libtool=no \
#	depfile='$(DEPDIR)/starspan_jtstest.Po' tmpdepfile='$(DEPDIR)/starspan_jtstest.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_jtstest.o `test -f 'src/starspan_jtstest.cc' || echo '$(srcdir)/'`src/starspan_jtstest.cc

starspan_jtstest.obj: src/starspan_jtstest.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_jtstest.obj -MD -MP -MF "$(DEPDIR)/starspan_jtstest.Tpo" \
	  -c -o starspan_jtstest.obj `if test -f 'src/starspan_jtstest.cc'; then $(CYGPATH_W) 'src/starspan_jtstest.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_jtstest.cc'; fi`; \
	then mv "$(DEPDIR)/starspan_jtstest.Tpo" "$(DEPDIR)/starspan_jtstest.Po"; \
	else rm -f "$(DEPDIR)/starspan_jtstest.Tpo"; exit 1; \
	fi
#	source='src/starspan_jtstest.cc' object='starspan_jtstest.obj' libtool=no \
#	depfile='$(DEPDIR)/starspan_jtstest.Po' tmpdepfile='$(DEPDIR)/starspan_jtstest.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_jtstest.obj `if test -f 'src/starspan_jtstest.cc'; then $(CYGPATH_W) 'src/starspan_jtstest.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_jtstest.cc'; fi`

starspan_util.o: src/starspan_util.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_util.o -MD -MP -MF "$(DEPDIR)/starspan_util.Tpo" \
	  -c -o starspan_util.o `test -f 'src/starspan_util.cc' || echo '$(srcdir)/'`src/starspan_util.cc; \
	then mv "$(DEPDIR)/starspan_util.Tpo" "$(DEPDIR)/starspan_util.Po"; \
	else rm -f "$(DEPDIR)/starspan_util.Tpo"; exit 1; \
	fi
#	source='src/starspan_util.cc' object='starspan_util.o' libtool=no \
#	depfile='$(DEPDIR)/starspan_util.Po' tmpdepfile='$(DEPDIR)/starspan_util.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_util.o `test -f 'src/starspan_util.cc' || echo '$(srcdir)/'`src/starspan_util.cc

starspan_util.obj: src/starspan_util.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_util.obj -MD -MP -MF "$(DEPDIR)/starspan_util.Tpo" \
	  -c -o starspan_util.obj `if test -f 'src/starspan_util.cc'; then $(CYGPATH_W) 'src/starspan_util.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_util.cc'; fi`; \
	then mv "$(DEPDIR)/starspan_util.Tpo" "$(DEPDIR)/starspan_util.Po"; \
	else rm -f "$(DEPDIR)/starspan_util.Tpo"; exit 1; \
	fi
#	source='src/starspan_util.cc' object='starspan_util.obj' libtool=no \
#	depfile='$(DEPDIR)/starspan_util.Po' tmpdepfile='$(DEPDIR)/starspan_util.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_util.obj `if test -f 'src/starspan_util.cc'; then $(CYGPATH_W) 'src/starspan_util.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_util.cc'; fi`

starspan_dump.o: src/starspan_dump.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_dump.o -MD -MP -MF "$(DEPDIR)/starspan_dump.Tpo" \
	  -c -o starspan_dump.o `test -f 'src/starspan_dump.cc' || echo '$(srcdir)/'`src/starspan_dump.cc; \
	then mv "$(DEPDIR)/starspan_dump.Tpo" "$(DEPDIR)/starspan_dump.Po"; \
	else rm -f "$(DEPDIR)/starspan_dump.Tpo"; exit 1; \
	fi
#	source='src/starspan_dump.cc' object='starspan_dump.o' libtool=no \
#	depfile='$(DEPDIR)/starspan_dump.Po' tmpdepfile='$(DEPDIR)/starspan_dump.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_dump.o `test -f 'src/starspan_dump.cc' || echo '$(srcdir)/'`src/starspan_dump.cc

starspan_dump.obj: src/starspan_dump.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_dump.obj -MD -MP -MF "$(DEPDIR)/starspan_dump.Tpo" \
	  -c -o starspan_dump.obj `if test -f 'src/starspan_dump.cc'; then $(CYGPATH_W) 'src/starspan_dump.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_dump.cc'; fi`; \
	then mv "$(DEPDIR)/starspan_dump.Tpo" "$(DEPDIR)/starspan_dump.Po"; \
	else rm -f "$(DEPDIR)/starspan_dump.Tpo"; exit 1; \
	fi
#	source='src/starspan_dump.cc' object='starspan_dump.obj' libtool=no \
#	depfile='$(DEPDIR)/starspan_dump.Po' tmpdepfile='$(DEPDIR)/starspan_dump.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_dump.obj `if test -f 'src/starspan_dump.cc'; then $(CYGPATH_W) 'src/starspan_dump.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_dump.cc'; fi`

starspan_tuct2.o: src/starspan_tuct2.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_tuct2.o -MD -MP -MF "$(DEPDIR)/starspan_tuct2.Tpo" \
	  -c -o starspan_tuct2.o `test -f 'src/starspan_tuct2.cc' || echo '$(srcdir)/'`src/starspan_tuct2.cc; \
	then mv "$(DEPDIR)/starspan_tuct2.Tpo" "$(DEPDIR)/starspan_tuct2.Po"; \
	else rm -f "$(DEPDIR)/starspan_tuct2.Tpo"; exit 1; \
	fi
#	source='src/starspan_tuct2.cc' object='starspan_tuct2.o' libtool=no \
#	depfile='$(DEPDIR)/starspan_tuct2.Po' tmpdepfile='$(DEPDIR)/starspan_tuct2.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_tuct2.o `test -f 'src/starspan_tuct2.cc' || echo '$(srcdir)/'`src/starspan_tuct2.cc

starspan_tuct2.obj: src/starspan_tuct2.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT starspan_tuct2.obj -MD -MP -MF "$(DEPDIR)/starspan_tuct2.Tpo" \
	  -c -o starspan_tuct2.obj `if test -f 'src/starspan_tuct2.cc'; then $(CYGPATH_W) 'src/starspan_tuct2.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_tuct2.cc'; fi`; \
	then mv "$(DEPDIR)/starspan_tuct2.Tpo" "$(DEPDIR)/starspan_tuct2.Po"; \
	else rm -f "$(DEPDIR)/starspan_tuct2.Tpo"; exit 1; \
	fi
#	source='src/starspan_tuct2.cc' object='starspan_tuct2.obj' libtool=no \
#	depfile='$(DEPDIR)/starspan_tuct2.Po' tmpdepfile='$(DEPDIR)/starspan_tuct2.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o starspan_tuct2.obj `if test -f 'src/starspan_tuct2.cc'; then $(CYGPATH_W) 'src/starspan_tuct2.cc'; else $(CYGPATH_W) '$(srcdir)/src/starspan_tuct2.cc'; fi`

Csv.o: src/csv/Csv.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Csv.o -MD -MP -MF "$(DEPDIR)/Csv.Tpo" \
	  -c -o Csv.o `test -f 'src/csv/Csv.cc' || echo '$(srcdir)/'`src/csv/Csv.cc; \
	then mv "$(DEPDIR)/Csv.Tpo" "$(DEPDIR)/Csv.Po"; \
	else rm -f "$(DEPDIR)/Csv.Tpo"; exit 1; \
	fi
#	source='src/csv/Csv.cc' object='Csv.o' libtool=no \
#	depfile='$(DEPDIR)/Csv.Po' tmpdepfile='$(DEPDIR)/Csv.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Csv.o `test -f 'src/csv/Csv.cc' || echo '$(srcdir)/'`src/csv/Csv.cc

Csv.obj: src/csv/Csv.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Csv.obj -MD -MP -MF "$(DEPDIR)/Csv.Tpo" \
	  -c -o Csv.obj `if test -f 'src/csv/Csv.cc'; then $(CYGPATH_W) 'src/csv/Csv.cc'; else $(CYGPATH_W) '$(srcdir)/src/csv/Csv.cc'; fi`; \
	then mv "$(DEPDIR)/Csv.Tpo" "$(DEPDIR)/Csv.Po"; \
	else rm -f "$(DEPDIR)/Csv.Tpo"; exit 1; \
	fi
#	source='src/csv/Csv.cc' object='Csv.obj' libtool=no \
#	depfile='$(DEPDIR)/Csv.Po' tmpdepfile='$(DEPDIR)/Csv.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Csv.obj `if test -f 'src/csv/Csv.cc'; then $(CYGPATH_W) 'src/csv/Csv.cc'; else $(CYGPATH_W) '$(srcdir)/src/csv/Csv.cc'; fi`

jts.o: src/jts/jts.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jts.o -MD -MP -MF "$(DEPDIR)/jts.Tpo" \
	  -c -o jts.o `test -f 'src/jts/jts.cc' || echo '$(srcdir)/'`src/jts/jts.cc; \
	then mv "$(DEPDIR)/jts.Tpo" "$(DEPDIR)/jts.Po"; \
	else rm -f "$(DEPDIR)/jts.Tpo"; exit 1; \
	fi
#	source='src/jts/jts.cc' object='jts.o' libtool=no \
#	depfile='$(DEPDIR)/jts.Po' tmpdepfile='$(DEPDIR)/jts.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jts.o `test -f 'src/jts/jts.cc' || echo '$(srcdir)/'`src/jts/jts.cc

jts.obj: src/jts/jts.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT jts.obj -MD -MP -MF "$(DEPDIR)/jts.Tpo" \
	  -c -o jts.obj `if test -f 'src/jts/jts.cc'; then $(CYGPATH_W) 'src/jts/jts.cc'; else $(CYGPATH_W) '$(srcdir)/src/jts/jts.cc'; fi`; \
	then mv "$(DEPDIR)/jts.Tpo" "$(DEPDIR)/jts.Po"; \
	else rm -f "$(DEPDIR)/jts.Tpo"; exit 1; \
	fi
#	source='src/jts/jts.cc' object='jts.obj' libtool=no \
#	depfile='$(DEPDIR)/jts.Po' tmpdepfile='$(DEPDIR)/jts.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o jts.obj `if test -f 'src/jts/jts.cc'; then $(CYGPATH_W) 'src/jts/jts.cc'; else $(CYGPATH_W) '$(srcdir)/src/jts/jts.cc'; fi`

Raster_gdal.o: src/raster/Raster_gdal.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Raster_gdal.o -MD -MP -MF "$(DEPDIR)/Raster_gdal.Tpo" \
	  -c -o Raster_gdal.o `test -f 'src/raster/Raster_gdal.cc' || echo '$(srcdir)/'`src/raster/Raster_gdal.cc; \
	then mv "$(DEPDIR)/Raster_gdal.Tpo" "$(DEPDIR)/Raster_gdal.Po"; \
	else rm -f "$(DEPDIR)/Raster_gdal.Tpo"; exit 1; \
	fi
#	source='src/raster/Raster_gdal.cc' object='Raster_gdal.o' libtool=no \
#	depfile='$(DEPDIR)/Raster_gdal.Po' tmpdepfile='$(DEPDIR)/Raster_gdal.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Raster_gdal.o `test -f 'src/raster/Raster_gdal.cc' || echo '$(srcdir)/'`src/raster/Raster_gdal.cc

Raster_gdal.obj: src/raster/Raster_gdal.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Raster_gdal.obj -MD -MP -MF "$(DEPDIR)/Raster_gdal.Tpo" \
	  -c -o Raster_gdal.obj `if test -f 'src/raster/Raster_gdal.cc'; then $(CYGPATH_W) 'src/raster/Raster_gdal.cc'; else $(CYGPATH_W) '$(srcdir)/src/raster/Raster_gdal.cc'; fi`; \
	then mv "$(DEPDIR)/Raster_gdal.Tpo" "$(DEPDIR)/Raster_gdal.Po"; \
	else rm -f "$(DEPDIR)/Raster_gdal.Tpo"; exit 1; \
	fi
#	source='src/raster/Raster_gdal.cc' object='Raster_gdal.obj' libtool=no \
#	depfile='$(DEPDIR)/Raster_gdal.Po' tmpdepfile='$(DEPDIR)/Raster_gdal.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Raster_gdal.obj `if test -f 'src/raster/Raster_gdal.cc'; then $(CYGPATH_W) 'src/raster/Raster_gdal.cc'; else $(CYGPATH_W) '$(srcdir)/src/raster/Raster_gdal.cc'; fi`

LineRasterizer.o: src/rasterizers/LineRasterizer.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LineRasterizer.o -MD -MP -MF "$(DEPDIR)/LineRasterizer.Tpo" \
	  -c -o LineRasterizer.o `test -f 'src/rasterizers/LineRasterizer.cc' || echo '$(srcdir)/'`src/rasterizers/LineRasterizer.cc; \
	then mv "$(DEPDIR)/LineRasterizer.Tpo" "$(DEPDIR)/LineRasterizer.Po"; \
	else rm -f "$(DEPDIR)/LineRasterizer.Tpo"; exit 1; \
	fi
#	source='src/rasterizers/LineRasterizer.cc' object='LineRasterizer.o' libtool=no \
#	depfile='$(DEPDIR)/LineRasterizer.Po' tmpdepfile='$(DEPDIR)/LineRasterizer.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LineRasterizer.o `test -f 'src/rasterizers/LineRasterizer.cc' || echo '$(srcdir)/'`src/rasterizers/LineRasterizer.cc

LineRasterizer.obj: src/rasterizers/LineRasterizer.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT LineRasterizer.obj -MD -MP -MF "$(DEPDIR)/LineRasterizer.Tpo" \
	  -c -o LineRasterizer.obj `if test -f 'src/rasterizers/LineRasterizer.cc'; then $(CYGPATH_W) 'src/rasterizers/LineRasterizer.cc'; else $(CYGPATH_W) '$(srcdir)/src/rasterizers/LineRasterizer.cc'; fi`; \
	then mv "$(DEPDIR)/LineRasterizer.Tpo" "$(DEPDIR)/LineRasterizer.Po"; \
	else rm -f "$(DEPDIR)/LineRasterizer.Tpo"; exit 1; \
	fi
#	source='src/rasterizers/LineRasterizer.cc' object='LineRasterizer.obj' libtool=no \
#	depfile='$(DEPDIR)/LineRasterizer.Po' tmpdepfile='$(DEPDIR)/LineRasterizer.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LineRasterizer.obj `if test -f 'src/rasterizers/LineRasterizer.cc'; then $(CYGPATH_W) 'src/rasterizers/LineRasterizer.cc'; else $(CYGPATH_W) '$(srcdir)/src/rasterizers/LineRasterizer.cc'; fi`

Stats.o: src/stats/Stats.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Stats.o -MD -MP -MF "$(DEPDIR)/Stats.Tpo" \
	  -c -o Stats.o `test -f 'src/stats/Stats.cc' || echo '$(srcdir)/'`src/stats/Stats.cc; \
	then mv "$(DEPDIR)/Stats.Tpo" "$(DEPDIR)/Stats.Po"; \
	else rm -f "$(DEPDIR)/Stats.Tpo"; exit 1; \
	fi
#	source='src/stats/Stats.cc' object='Stats.o' libtool=no \
#	depfile='$(DEPDIR)/Stats.Po' tmpdepfile='$(DEPDIR)/Stats.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Stats.o `test -f 'src/stats/Stats.cc' || echo '$(srcdir)/'`src/stats/Stats.cc

Stats.obj: src/stats/Stats.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Stats.obj -MD -MP -MF "$(DEPDIR)/Stats.Tpo" \
	  -c -o Stats.obj `if test -f 'src/stats/Stats.cc'; then $(CYGPATH_W) 'src/stats/Stats.cc'; else $(CYGPATH_W) '$(srcdir)/src/stats/Stats.cc'; fi`; \
	then mv "$(DEPDIR)/Stats.Tpo" "$(DEPDIR)/Stats.Po"; \
	else rm -f "$(DEPDIR)/Stats.Tpo"; exit 1; \
	fi
#	source='src/stats/Stats.cc' object='Stats.obj' libtool=no \
#	depfile='$(DEPDIR)/Stats.Po' tmpdepfile='$(DEPDIR)/Stats.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Stats.obj `if test -f 'src/stats/Stats.cc'; then $(CYGPATH_W) 'src/stats/Stats.cc'; else $(CYGPATH_W) '$(srcdir)/src/stats/Stats.cc'; fi`

traverser.o: src/traverser/traverser.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT traverser.o -MD -MP -MF "$(DEPDIR)/traverser.Tpo" \
	  -c -o traverser.o `test -f 'src/traverser/traverser.cc' || echo '$(srcdir)/'`src/traverser/traverser.cc; \
	then mv "$(DEPDIR)/traverser.Tpo" "$(DEPDIR)/traverser.Po"; \
	else rm -f "$(DEPDIR)/traverser.Tpo"; exit 1; \
	fi
#	source='src/traverser/traverser.cc' object='traverser.o' libtool=no \
#	depfile='$(DEPDIR)/traverser.Po' tmpdepfile='$(DEPDIR)/traverser.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o traverser.o `test -f 'src/traverser/traverser.cc' || echo '$(srcdir)/'`src/traverser/traverser.cc

traverser.obj: src/traverser/traverser.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT traverser.obj -MD -MP -MF "$(DEPDIR)/traverser.Tpo" \
	  -c -o traverser.obj `if test -f 'src/traverser/traverser.cc'; then $(CYGPATH_W) 'src/traverser/traverser.cc'; else $(CYGPATH_W) '$(srcdir)/src/traverser/traverser.cc'; fi`; \
	then mv "$(DEPDIR)/traverser.Tpo" "$(DEPDIR)/traverser.Po"; \
	else rm -f "$(DEPDIR)/traverser.Tpo"; exit 1; \
	fi
#	source='src/traverser/traverser.cc' object='traverser.obj' libtool=no \
#	depfile='$(DEPDIR)/traverser.Po' tmpdepfile='$(DEPDIR)/traverser.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o traverser.obj `if test -f 'src/traverser/traverser.cc'; then $(CYGPATH_W) 'src/traverser/traverser.cc'; else $(CYGPATH_W) '$(srcdir)/src/traverser/traverser.cc'; fi`

Progress.o: src/util/Progress.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Progress.o -MD -MP -MF "$(DEPDIR)/Progress.Tpo" \
	  -c -o Progress.o `test -f 'src/util/Progress.cc' || echo '$(srcdir)/'`src/util/Progress.cc; \
	then mv "$(DEPDIR)/Progress.Tpo" "$(DEPDIR)/Progress.Po"; \
	else rm -f "$(DEPDIR)/Progress.Tpo"; exit 1; \
	fi
#	source='src/util/Progress.cc' object='Progress.o' libtool=no \
#	depfile='$(DEPDIR)/Progress.Po' tmpdepfile='$(DEPDIR)/Progress.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Progress.o `test -f 'src/util/Progress.cc' || echo '$(srcdir)/'`src/util/Progress.cc

Progress.obj: src/util/Progress.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Progress.obj -MD -MP -MF "$(DEPDIR)/Progress.Tpo" \
	  -c -o Progress.obj `if test -f 'src/util/Progress.cc'; then $(CYGPATH_W) 'src/util/Progress.cc'; else $(CYGPATH_W) '$(srcdir)/src/util/Progress.cc'; fi`; \
	then mv "$(DEPDIR)/Progress.Tpo" "$(DEPDIR)/Progress.Po"; \
	else rm -f "$(DEPDIR)/Progress.Tpo"; exit 1; \
	fi
#	source='src/util/Progress.cc' object='Progress.obj' libtool=no \
#	depfile='$(DEPDIR)/Progress.Po' tmpdepfile='$(DEPDIR)/Progress.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Progress.obj `if test -f 'src/util/Progress.cc'; then $(CYGPATH_W) 'src/util/Progress.cc'; else $(CYGPATH_W) '$(srcdir)/src/util/Progress.cc'; fi`

Vector_ogr.o: src/vector/Vector_ogr.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Vector_ogr.o -MD -MP -MF "$(DEPDIR)/Vector_ogr.Tpo" \
	  -c -o Vector_ogr.o `test -f 'src/vector/Vector_ogr.cc' || echo '$(srcdir)/'`src/vector/Vector_ogr.cc; \
	then mv "$(DEPDIR)/Vector_ogr.Tpo" "$(DEPDIR)/Vector_ogr.Po"; \
	else rm -f "$(DEPDIR)/Vector_ogr.Tpo"; exit 1; \
	fi
#	source='src/vector/Vector_ogr.cc' object='Vector_ogr.o' libtool=no \
#	depfile='$(DEPDIR)/Vector_ogr.Po' tmpdepfile='$(DEPDIR)/Vector_ogr.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Vector_ogr.o `test -f 'src/vector/Vector_ogr.cc' || echo '$(srcdir)/'`src/vector/Vector_ogr.cc

Vector_ogr.obj: src/vector/Vector_ogr.cc
	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Vector_ogr.obj -MD -MP -MF "$(DEPDIR)/Vector_ogr.Tpo" \
	  -c -o Vector_ogr.obj `if test -f 'src/vector/Vector_ogr.cc'; then $(CYGPATH_W) 'src/vector/Vector_ogr.cc'; else $(CYGPATH_W) '$(srcdir)/src/vector/Vector_ogr.cc'; fi`; \
	then mv "$(DEPDIR)/Vector_ogr.Tpo" "$(DEPDIR)/Vector_ogr.Po"; \
	else rm -f "$(DEPDIR)/Vector_ogr.Tpo"; exit 1; \
	fi
#	source='src/vector/Vector_ogr.cc' object='Vector_ogr.obj' libtool=no \
#	depfile='$(DEPDIR)/Vector_ogr.Po' tmpdepfile='$(DEPDIR)/Vector_ogr.TPo' \
#	$(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Vector_ogr.obj `if test -f 'src/vector/Vector_ogr.cc'; then $(CYGPATH_W) 'src/vector/Vector_ogr.cc'; else $(CYGPATH_W) '$(srcdir)/src/vector/Vector_ogr.cc'; fi`
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = .
distdir = $(PACKAGE)-$(VERSION)

am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }

GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	$(mkinstalldirs) $(distdir)/.
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist dist-all: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	$(am__remove_distdir)
	GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(AMTAR) xf -
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && $(mkinstalldirs) "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist-gzip \
	  && rm -f $(distdir).tar.gz \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@echo "$(distdir).tar.gz is ready for distribution" | \
	  sed 'h;s/./=/g;p;x;p;x'
distuninstallcheck:
	cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf autom4te.cache
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags dist dist-all dist-gzip distcheck distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am info info-am install install-am install-binPROGRAMS \
	install-binSCRIPTS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-binSCRIPTS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
